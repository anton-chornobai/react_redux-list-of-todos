{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","api.ts","app/hooks.ts","components/Loader/Loader.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","query","status","initialState","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","useDispatch","useAppSelector","useSelector","Loader","className","TodoList","dispatch","selectedTodo","filterStatus","useState","isLoading","setIsLoading","isError","setIsError","filteredTodos","useMemo","newTodos","title","toLowerCase","includes","completed","useEffect","todosActions","catch","finally","length","map","id","onClick","selectedTodoActions","setSelectedTodo","TodoFilter","onSubmit","event","preventDefault","onChange","e","currentTarget","value","filterActions","placeholder","style","pointerEvents","TodoModal","error","setError","tempUser","setTempUser","userId","currentTodoActions","href","email","name","App","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5761fce5.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/REMOVE':\n      return null;\n    case 'currentTodo/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQuery = { type: 'set/query'; payload: string };\ntype ChangeStatus = { type: 'change/status'; payload: Status };\ntype Clear = { type: 'clear' };\n\ntype Action = SetQuery | ChangeStatus | Clear;\n\nconst setQuery = (query: string) => ({ type: 'set/query', payload: query });\nconst changeStatus = (status: Status) => ({\n  type: 'change/status',\n  payload: status,\n});\n\nconst clearQuery = () => ({ type: 'clear' });\n\nexport const actions = { setQuery, changeStatus, clearQuery };\n\ntype InitialFilter = {\n  query: string;\n  status: Status;\n};\n\nconst initialState: InitialFilter = { query: '', status: 'all' };\n\nconst filterReducer = (state: InitialFilter = initialState, action: Action) => {\n  switch (action.type) {\n    case 'set/query':\n      return { ...state, query: action.payload };\n    case 'change/status':\n      return { ...state, status: action.payload };\n    case 'clear':\n      return { ...state, query: '' };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype Action = { type: 'add/todos'; payload: Todo[] };\n\nconst addTodos = (todos: Todo[]) => ({ type: 'add/todos', payload: todos });\n\nexport const actions = { addTodos };\n\nconst todosReducer = (todos: Todo[] = [], action: Action): Todo[] => {\n  switch (action.type) {\n    case 'add/todos':\n      return [...action.payload];\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getTodos } from '../../api';\nimport { actions as todosActions } from '../../features/todos';\nimport { useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\nimport { actions as selectedTodoActions } from '../../features/currentTodo';\nimport { Loader } from '../Loader';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useDispatch();\n  const selectedTodo = useAppSelector((state) => state.currentTodo);\n  const filterStatus = useAppSelector((state) => state.filter.status);\n  const todos = useAppSelector((state) => state.todos);\n  const [isLoading, setIsLoading] = useState(false);\n  const query = useAppSelector((state) => state.filter.query);\n  const [isError, setIsError] = useState(false);\n  const setSelectedTodo = (todo: Todo) => {\n    dispatch(selectedTodoActions.setTodo(todo));\n  };\n\n  const filteredTodos = useMemo(() => {\n    const newTodos = query\n      ? [...todos].filter((todo) => todo.title.toLowerCase().includes(query))\n      : [...todos];\n\n    switch (filterStatus) {\n      case 'active':\n        return newTodos.filter((todo) => todo.completed === false);\n\n      case 'completed':\n        return newTodos.filter((todo) => todo.completed === true);\n\n      default:\n        return newTodos;\n    }\n  }, [query, todos, filterStatus]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then((res) => {\n        dispatch(todosActions.addTodos(res));\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      {!isLoading && !isError && filteredTodos.length === 0 && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n      {isLoading && !isError && <Loader />}\n      {!isLoading && !isError && filteredTodos.length > 0 && (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {filteredTodos.map((todo) => {\n              return (\n                <tr data-cy=\"todo\" key={todo.id}>\n                  <td className=\"is-vcentered\">{todo.id}</td>\n                  <td className=\"is-vcentered\">\n                    {todo.completed && (\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    )}\n                  </td>\n                  <td className=\"is-vcentered is-expanded\">\n                    <p\n                      className={\n                        todo.completed ? 'has-text-success' : 'has-text-danger'\n                      }\n                    >\n                      {todo.title}\n                    </p>\n                  </td>\n\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => setSelectedTodo(todo)}\n                    >\n                      <span className=\"icon\">\n                        <i\n                          className={\n                            todo.id === selectedTodo?.id\n                              ? 'far fa-eye-slash'\n                              : 'far fa-eye'\n                          }\n                        />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React, { ChangeEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Status } from '../../types/Status';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const query = useAppSelector((state) => state.filter.query);\n  const dispatch = useDispatch();\n\n  const onStatusChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    const status = e.currentTarget.value as Status;\n\n    dispatch(filterActions.changeStatus(status));\n  };\n\n  const onQuerySetting = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(filterActions.setQuery(e.currentTarget.value.toLowerCase()));\n  };\n\n  const onClearInput = () => {\n    dispatch(filterActions.clearQuery());\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={(event) => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={onStatusChange}>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={onQuerySetting}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              aria-label=\"clear\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onClearInput}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Loader } from '../Loader';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useDispatch();\n  const selectedTodo = useAppSelector((state) => state.currentTodo);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [tempUser, setTempUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setTempUser)\n        .catch(() => setError(true))\n        .finally(() => setIsLoading(false));\n    }\n  }, []);\n  const onClosingModal = () => {\n    dispatch(currentTodoActions.removeTodo());\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading && !error && <Loader />}\n      {!isLoading && !error && selectedTodo && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClosingModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n              <a href={`mailto:${tempUser?.email}`}>{tempUser?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { useAppSelector } from './app/hooks';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const selectedTodo = useAppSelector((state) => state.currentTodo);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}